<?php

namespace DoctrineProxies\__CG__\entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Taxon extends \entities\Taxon implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setAcceptedName($acceptedName)
    {
        $this->__load();
        return parent::setAcceptedName($acceptedName);
    }

    public function getAcceptedName()
    {
        $this->__load();
        return parent::getAcceptedName();
    }

    public function setRank($rank)
    {
        $this->__load();
        return parent::setRank($rank);
    }

    public function getRank()
    {
        $this->__load();
        return parent::getRank();
    }

    public function setAuthorInitials($authorInitials)
    {
        $this->__load();
        return parent::setAuthorInitials($authorInitials);
    }

    public function getAuthorInitials()
    {
        $this->__load();
        return parent::getAuthorInitials();
    }

    public function setEndemic($endemic)
    {
        $this->__load();
        return parent::setEndemic($endemic);
    }

    public function getEndemic()
    {
        $this->__load();
        return parent::getEndemic();
    }

    public function setSynonimClasification($synonimClasification)
    {
        $this->__load();
        return parent::setSynonimClasification($synonimClasification);
    }

    public function getSynonimClasification()
    {
        $this->__load();
        return parent::getSynonimClasification();
    }

    public function setGlobalDistribution($globalDistribution)
    {
        $this->__load();
        return parent::setGlobalDistribution($globalDistribution);
    }

    public function getGlobalDistribution()
    {
        $this->__load();
        return parent::getGlobalDistribution();
    }

    public function setTropicalAndeanDistribution($tropicalAndeanDistribution)
    {
        $this->__load();
        return parent::setTropicalAndeanDistribution($tropicalAndeanDistribution);
    }

    public function getTropicalAndeanDistribution()
    {
        $this->__load();
        return parent::getTropicalAndeanDistribution();
    }

    public function setVDWDistribution($vDWDistribution)
    {
        $this->__load();
        return parent::setVDWDistribution($vDWDistribution);
    }

    public function getVDWDistribution()
    {
        $this->__load();
        return parent::getVDWDistribution();
    }

    public function setReviewEditor($reviewEditor)
    {
        $this->__load();
        return parent::setReviewEditor($reviewEditor);
    }

    public function getReviewEditor()
    {
        $this->__load();
        return parent::getReviewEditor();
    }

    public function setReviewDate($reviewDate)
    {
        $this->__load();
        return parent::setReviewDate($reviewDate);
    }

    public function getReviewDate()
    {
        $this->__load();
        return parent::getReviewDate();
    }

    public function setReviewComments($reviewComments)
    {
        $this->__load();
        return parent::setReviewComments($reviewComments);
    }

    public function getReviewComments()
    {
        $this->__load();
        return parent::getReviewComments();
    }

    public function setImageDir($imageDir)
    {
        $this->__load();
        return parent::setImageDir($imageDir);
    }

    public function getImageDir()
    {
        $this->__load();
        return parent::getImageDir();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setChildrenHierarchy(\entities\Taxon $childrenHierarchy)
    {
        $this->__load();
        return parent::setChildrenHierarchy($childrenHierarchy);
    }

    public function setChildrenSynonyms(\entities\Taxon $childrenSynonym)
    {
        $this->__load();
        return parent::setChildrenSynonyms($childrenSynonym);
    }

    public function getChildrenHierarchy()
    {
        $this->__load();
        return parent::getChildrenHierarchy();
    }

    public function getChildrenSynonyms()
    {
        $this->__load();
        return parent::getChildrenSynonyms();
    }

    public function addNota(\entities\Nota $notas)
    {
        $this->__load();
        return parent::addNota($notas);
    }

    public function getNotas()
    {
        $this->__load();
        return parent::getNotas();
    }

    public function setParentHierarchy(\entities\Taxon $parentHierarchy = NULL)
    {
        $this->__load();
        return parent::setParentHierarchy($parentHierarchy);
    }

    public function getParentHierarchy()
    {
        $this->__load();
        return parent::getParentHierarchy();
    }

    public function setParentSynonyms(\entities\Taxon $parentSynonyms = NULL)
    {
        $this->__load();
        return parent::setParentSynonyms($parentSynonyms);
    }

    public function getParentSynonyms()
    {
        $this->__load();
        return parent::getParentSynonyms();
    }

    public function addSustrato(\entities\Sustrato $sustratos)
    {
        $this->__load();
        return parent::addSustrato($sustratos);
    }

    public function getSustratos()
    {
        $this->__load();
        return parent::getSustratos();
    }

    public function addEcorregion(\entities\Ecorregion $ecorregiones)
    {
        $this->__load();
        return parent::addEcorregion($ecorregiones);
    }

    public function getEcorregiones()
    {
        $this->__load();
        return parent::getEcorregiones();
    }

    public function addEcosistema(\entities\Ecosistema $ecosistemas)
    {
        $this->__load();
        return parent::addEcosistema($ecosistemas);
    }

    public function getEcosistemas()
    {
        $this->__load();
        return parent::getEcosistemas();
    }

    public function addCambioClimatico(\entities\CambioClimatico $cambiosClimaticos)
    {
        $this->__load();
        return parent::addCambioClimatico($cambiosClimaticos);
    }

    public function getCambiosClimaticos()
    {
        $this->__load();
        return parent::getCambiosClimaticos();
    }

    public function addListaRoja(\entities\ListaRoja $listasRojas)
    {
        $this->__load();
        return parent::addListaRoja($listasRojas);
    }

    public function getListasRojas()
    {
        $this->__load();
        return parent::getListasRojas();
    }

    public function addLocalidad(\entities\Localidad $localidades)
    {
        $this->__load();
        return parent::addLocalidad($localidades);
    }

    public function getLocalidades()
    {
        $this->__load();
        return parent::getLocalidades();
    }

    public function addSynonym(\entities\Taxon $childrenHierarchy)
    {
        $this->__load();
        return parent::addSynonym($childrenHierarchy);
    }

    public function addTaxon(\entities\Taxon $childrenHierarchy)
    {
        $this->__load();
        return parent::addTaxon($childrenHierarchy);
    }

    public function setImages($images)
    {
        $this->__load();
        return parent::setImages($images);
    }

    public function getImages()
    {
        $this->__load();
        return parent::getImages();
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function setModificationDate($modificationDate)
    {
        $this->__load();
        return parent::setModificationDate($modificationDate);
    }

    public function getModificationDate()
    {
        $this->__load();
        return parent::getModificationDate();
    }

    public function setComments($comments)
    {
        $this->__load();
        return parent::setComments($comments);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'creationDate', 'modificationDate', 'comments', 'status', 'name', 'acceptedName', 'rank', 'authorInitials', 'endemic', 'synonimClasification', 'globalDistribution', 'tropicalAndeanDistribution', 'VDWDistribution', 'reviewEditor', 'reviewDate', 'reviewComments', 'images', 'id', 'children_hierarchy', 'children_synonyms', 'notas', 'parent_hierarchy', 'parent_synonyms', 'sustratos', 'ecorregiones', 'ecosistemas', 'cambios_climaticos', 'listas_rojas', 'localidades');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}