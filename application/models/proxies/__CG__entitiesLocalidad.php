<?php

namespace DoctrineProxies\__CG__\entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Localidad extends \entities\Localidad implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setMinAltitude($minAltitude)
    {
        $this->__load();
        return parent::setMinAltitude($minAltitude);
    }

    public function getMinAltitude()
    {
        $this->__load();
        return parent::getMinAltitude();
    }

    public function setMaxAltitude($maxAltitude)
    {
        $this->__load();
        return parent::setMaxAltitude($maxAltitude);
    }

    public function getMaxAltitude()
    {
        $this->__load();
        return parent::getMaxAltitude();
    }

    public function setLatitude($latitude)
    {
        $this->__load();
        return parent::setLatitude($latitude);
    }

    public function getLatitude()
    {
        $this->__load();
        return parent::getLatitude();
    }

    public function setLongitude($longitude)
    {
        $this->__load();
        return parent::setLongitude($longitude);
    }

    public function getLongitude()
    {
        $this->__load();
        return parent::getLongitude();
    }

    public function setCollection($collection)
    {
        $this->__load();
        return parent::setCollection($collection);
    }

    public function getCollection()
    {
        $this->__load();
        return parent::getCollection();
    }

    public function setCollectionDate($collectionDate)
    {
        $this->__load();
        return parent::setCollectionDate($collectionDate);
    }

    public function getCollectionDate()
    {
        $this->__load();
        return parent::getCollectionDate();
    }

    public function setHebarium($hebarium)
    {
        $this->__load();
        return parent::setHebarium($hebarium);
    }

    public function getHebarium()
    {
        $this->__load();
        return parent::getHebarium();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setMunicipio(\entities\Municipio $municipio = NULL)
    {
        $this->__load();
        return parent::setMunicipio($municipio);
    }

    public function getMunicipio()
    {
        $this->__load();
        return parent::getMunicipio();
    }

    public function setEstado(\entities\Estado $estado = NULL)
    {
        $this->__load();
        return parent::setEstado($estado);
    }

    public function getEstado()
    {
        $this->__load();
        return parent::getEstado();
    }

    public function addPublicacion(\entities\Publicacion $publications)
    {
        $this->__load();
        return parent::addPublicacion($publications);
    }

    public function getPublications()
    {
        $this->__load();
        return parent::getPublications();
    }

    public function addTaxon(\entities\Taxon $taxons)
    {
        $this->__load();
        return parent::addTaxon($taxons);
    }

    public function getTaxons()
    {
        $this->__load();
        return parent::getTaxons();
    }

    public function setCreationDate($creationDate)
    {
        $this->__load();
        return parent::setCreationDate($creationDate);
    }

    public function getCreationDate()
    {
        $this->__load();
        return parent::getCreationDate();
    }

    public function setModificationDate($modificationDate)
    {
        $this->__load();
        return parent::setModificationDate($modificationDate);
    }

    public function getModificationDate()
    {
        $this->__load();
        return parent::getModificationDate();
    }

    public function setComments($comments)
    {
        $this->__load();
        return parent::setComments($comments);
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'creationDate', 'modificationDate', 'comments', 'status', 'name', 'minAltitude', 'maxAltitude', 'latitude', 'longitude', 'collection', 'collectionDate', 'hebarium', 'id', 'municipio', 'estado', 'publications', 'taxons');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}