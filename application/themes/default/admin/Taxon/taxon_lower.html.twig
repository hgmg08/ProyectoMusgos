{% extends '_layouts/admin.html.twig' %}

{% block head %}

	{{ parent() }}
	
	<script type="text/javascript">
		$(document).ready(function () {
			var taxonId = {{ id }};
			var op = {{ operation }};
			
			$('#tax_tabs').jqxTabs({ width: '100%', autoHeight: true, position: 'top', theme: theme });
		
			var theme = 'mdv';
			var getLocalization = function () {
				var localizationobj = {};
				localizationobj.pagergotopagestring = "Ir a página:";
			    localizationobj.pagershowrowsstring = "Mostrar filas:";
			    localizationobj.pagerrangestring = " de ";
			    localizationobj.pagernextbuttonstring = "Siguiente";
			    localizationobj.pagerpreviousbuttonstring = "Anterior";
			    localizationobj.filtershowrowstring = "Escoger:";
			    localizationobj.sortascendingstring = "Ordenar ascendentemente";
				localizationobj.sortdescendingstring = "Ordenar descendentemente";
				localizationobj.sortremovestring = "Quitar ordenación";
				localizationobj.emptydatastring = " ";
			    return localizationobj;
			}
			
			var parentTaxonList = {{ parentRankList }};
			var sourceParentRank =
		    {
		    	datatype: "json",
		        datafields: [
		        	{ name: 'id' },
		            { name: 'name' }
		        ],
		        localdata: parentTaxonList
		    };
			var daParentRank = new $.jqx.dataAdapter(sourceParentRank);
			
			$('#parent').jqxDropDownList({
				source: daParentRank,
				displayMember: 'name',
				valueMember: 'id', 
				width: 400, 
				height: 20, 
				theme: theme,
				placeHolder: ''
			});
			
			var sustratos = {{ sustratos }};
			var sourceSustratos =
			{
				datatype: "json",
				datafields: [
					{ name: 'id' },
					{ name: 'parentid' },
					{ name: 'text' }
				],
				async: false,
				id: 'id',
				localdata: sustratos
			};
			var daSustratos = new $.jqx.dataAdapter(sourceSustratos);
			daSustratos.dataBind();
			var recSustratos = daSustratos.getRecordsHierarchy('id', 'parentid', 'items', [{ name: 'text', map: 'label' }]);
			
			$('#sustratos').jqxTree({ source: recSustratos, width: 400, theme: theme, hasThreeStates: true, checkboxes: true });
			
			var ecosistemas = {{ ecosistemas }};
			var sourceEcosistemas =
			{
				datatype: "json",
				datafields: [
					{ name: 'id' },
					{ name: 'parentid' },
					{ name: 'text' }
				],
				async: false,
				id: 'id',
				localdata: ecosistemas
			};
			var daEcosistemas = new $.jqx.dataAdapter(sourceEcosistemas);
			daEcosistemas.dataBind();
			var recEcosistemas = daEcosistemas.getRecordsHierarchy('id', 'parentid', 'items', [{ name: 'text', map: 'label' }]);
			
			$('#ecosistemas').jqxTree({ source: recEcosistemas, width: 400, theme: theme, hasThreeStates: true, checkboxes: true });
			
			var ecorregiones = {{ ecorregiones }};
			var sourceEcorregiones =
			{
				datatype: "json",
				datafields: [
					{ name: 'id' },
					{ name: 'name' }
				],
				localdata: ecorregiones
			};
			var daEcorregiones = new $.jqx.dataAdapter(sourceEcorregiones);
			$('#ecorregiones').jqxListBox({ width: 400, source: daEcorregiones, displayMember: 'name', valueMember: 'id', checkboxes: true, theme: theme });
			
			$('#name').jqxInput({ height: 20, width: 400, theme: theme });
			$('#author').jqxInput({ height: 20, width: 400, theme: theme });
			$('#accepted').jqxCheckBox({ theme: theme });
			$('#endemic').jqxCheckBox({ theme: theme });
			$('#review_editor').jqxInput({ height: 20, width: 400, theme: theme });
			$('#review_date').jqxDateTimeInput({ height: 20, width: 200, formatString: 'dd/MM/yyyy', theme: theme });
			
			var sinonimos = {{ sinonimos }};
			var sourceSinonimos = {
				datatype: "json",
			    datafields: [
			    	{ name: 'id', type: 'number' },
			    	{ name: 'name', type: 'string' },
			    	{ name: 'author', type: 'string' },
			    	{ name: 'rank', type: 'string' },
			    	{ name: 'type', type: 'string' }
			    ],
				localdata: sinonimos,
				pagesize: 10,
				
				addrow: function (rowid, rowdata, position, commit) {
					commit(true);
				},
				
				updaterow: function (rowid, rowdata, commit) {
					var data = 'tid=' + taxonId + '&' + $.param(rowdata);
					console.log(data);
					$.ajax({
						url: '{{ base_url('admin/taxon/persist_lower_synonim') }}',
						data: data,
						dataType: 'text',
						cache: false,
						success: function(response) {
							console.log(response);
							if (response > 0) {
								commit(true);
							}
						},
						error: function(jqXHR, textStatus, errorThrown) {
							alert(errorThrown);
							commit(false);
						}
					});
				},
				
				deleterow: function (rowid, commit) {
					var synonim = $('#grid_sinonimos').jqxGrid('getrowdata', rowid);
					var data = {
						id: synonim.id
					};
					$.ajax({
						type: 'POST',
						url: '{{ base_url('admin/taxon/delete_synonim') }}',
						data: data,
						dataType: 'text',
						cache: false,
						success: function (data, status, xhr) {
							commit(true);
						},
						error: function(jqXHR, textStatus, errorThrown) {
							commit(false);
							alert(errorThrown);
						}
					});
				}
			};
			
			var daSinonimos = new $.jqx.dataAdapter(sourceSinonimos);
			
			$('#grid_sinonimos').jqxGrid({
				width: 915,
				theme: theme,
				autoheight: true,
				source: daSinonimos,
				editable: true,
				columnsresize: true,
				showstatusbar: true,
				localization: getLocalization(),
			    pageable: true,
				renderstatusbar: function (statusbar) {
					var container = $("<div style='overflow: hidden; position: relative; margin: 3px;'></div>");
                    var addButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_new.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Nuevo</span></div>");
                    var deleteButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_delete.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Eliminar</span></div>");
                    container.append(addButton);
                    container.append(deleteButton);
                    statusbar.append(container);
                    addButton.jqxButton({ theme: theme, width: 70, height: 20 });
                    deleteButton.jqxButton({ theme: theme, width: 80, height: 20 });
                    
                    addButton.bind('click', function () {
                    	var commit = $('#grid_sinonimos').jqxGrid('addrow', null, {});
                    });
                    
                    deleteButton.bind('click', function () {
                    	$('#confirm').css('visibility', 'visible');
                    	$('#confirm').jqxWindow('open');
                    	$('#confirm').on('close', function (event) {
                			if (event.args.dialogResult.OK) {
                				var rowindex = $('#grid_sinonimos').jqxGrid('getselectedrowindex');
		                    	if (rowindex >= 0) {
		                    		var id = $("#grid_sinonimos").jqxGrid('getrowid', rowindex);
		        					$("#grid_sinonimos").jqxGrid('deleterow', id);
		                    	}	
                			}
            			});
                    });
                },
				columns: [
					{ text: 'Nombre', width: '30%', columntype: 'textbox', datafield: 'name' },
					{ text: 'Autor', width: '30%', columntype: 'textbox', datafield: 'author' },
					{ text: 'Clasificación', width: '20%', columntype: 'dropdownlist', datafield: 'rank',
						createeditor: function (row, column, editor) {
							var list = [{'id': 6, 'name': 'Especie'}, {'id': 7, 'name': 'SubEspecie'}, {'id': 8, 'name': 'Variedad'}];
							var source = { datatype: 'json', datafields: [{ name: 'id', type: 'number' }, { name: 'name', type: 'string' }], localdata: list };
							var da = new $.jqx.dataAdapter(source);
							editor.jqxDropDownList({ autoDropDownHeight: true, source: da, displayMember: 'name', valueMember: 'id', placeHolder: "Escoja:" });
						},
						cellvaluechanging: function (row, column, columntype, oldvalue, newvalue) {
                        	if (newvalue == "") return oldvalue;
                        }
					},
					{ text: 'Tipo', width: '20%', columntype: 'dropdownlist', datafield: 'type',
						createeditor: function (row, column, editor) {
							var list = [{'id':1, 'name':'Sinónimo'}, {'id':2, 'name':'Basiónimo'}];
							var source = { datatype: 'json', datafields: [{ name: 'id', type: 'number' }, { name: 'name', type: 'string' }], localdata: list };
							var da = new $.jqx.dataAdapter(source);
							editor.jqxDropDownList({ autoDropDownHeight: true, source: da, displayMember: 'name', valueMember: 'id', placeHolder: "Escoja:" });
						},
						cellvaluechanging: function (row, column, columntype, oldvalue, newvalue) {
                        	if (newvalue == "") return oldvalue;
                        }
                    }
				]
			});
			
			var specimens = {{ especimenes }};
			var sourceSpecimens = {
				datatype: 'json',
			    datafields: [
			    	{ name: 'id', type: 'number' },
			    	{ name: 'state', type: 'string' },
			    	{ name: 'town', type: 'string' },
			    	{ name: 'location', type: 'string' },
			    	{ name: 'altitude_min', type: 'int' },
			    	{ name: 'altitude_max', type: 'int' },
			    	{ name: 'latitude', type: 'string' },
			    	{ name: 'longitude', type: 'string' },
			    	{ name: 'collection', type: 'string' },
			    	{ name: 'collection_date', type: 'date', format: "dd/MM/yyyy" },
			    	{ name: 'herbarium', type: 'string' },
			    	{ name: 'reference', type: 'string' }
			    ],
				localdata: specimens,
				pagesize: 10,
				
				addrow: function (rowid, rowdata, position, commit) {
					commit(true);
				},
				
				deleterow: function (rowid, commit) {
					commit(true);
				}
			};
			
			var daSpecimens = new $.jqx.dataAdapter(sourceSpecimens);
			
			var states = {{ estados }};
			var sourceStates = {
				datatype: 'json',
				datafields: [
					{ name: 'id', type: 'number' },
					{ name: 'name', type: 'string' }
				],
				localdata: states
			};
			
			var daStates = new $.jqx.dataAdapter(sourceStates);
			
			var townsSource = {
				datatype: 'json',
				datafields: [
					{ name: 'id', type: 'number' },
					{ name: 'name', type: 'string' }
				],
				url: '{{ base_url('admin/taxon/getTowns') }}',
				cache: false,
				async: false
			};
			
			var daTowns = new $.jqx.dataAdapter(townsSource);
			
			$('#grid_especimenes').jqxGrid({
				width: 915,
				theme: theme,
				autoheight: true,
				source: daSpecimens,
				editable: true,
				columnsresize: true,
				showstatusbar: true,
				localization: getLocalization(),
			    pageable: true,
				renderstatusbar: function (statusbar) {
					var container = $("<div style='overflow: hidden; position: relative; margin: 3px;'></div>");
                    var addButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_new.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Nuevo</span></div>");
                    var deleteButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_delete.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Eliminar</span></div>");
                    container.append(addButton);
                    container.append(deleteButton);
                    statusbar.append(container);
                    addButton.jqxButton({ theme: theme, width: 70, height: 20 });
                    deleteButton.jqxButton({ theme: theme, width: 80, height: 20 });
                    
                    addButton.bind('click', function () {
                    	var commit = $('#grid_especimenes').jqxGrid('addrow', null, {});
                    });
                    
                    deleteButton.bind('click', function () {
                    	var rowindex = $('#grid_especimenes').jqxGrid('getselectedrowindex');
                    	if (rowindex >= 0) {
                    		var id = $("#grid_especimenes").jqxGrid('getrowid', rowindex);
        					$("#grid_especimenes").jqxGrid('deleterow', id);
                    	}
                    });
                },
				columns: [
					{ text: 'Estado', width: '22%', columntype: 'dropdownlist', datafield: 'state', 
						createeditor: function (row, column, editor) {
							editor.jqxDropDownList({ autoDropDownHeight: true, source: daStates, displayMember: 'name', valueMember: 'id', placeHolder: "Escoja:" });
							
							editor.bind('select', function (event) {
								if(event.args) {
									var value = event.args.item.value;
									townsSource.data = {state: value};
									daTowns = new $.jqx.dataAdapter(townsSource);
								}
							});
						},
						cellvaluechanging: function (row, column, columntype, oldvalue, newvalue) {
                        	if (newvalue == "") return oldvalue;
                        },
					},
					{ text: 'Municipio', width: '23%', columntype: 'dropdownlist', datafield: 'town',
						initeditor: function (row, cellvalue, editor, celltext, cellwidth, cellheight) {
							var stateValue = $('#grid_especimenes').jqxGrid('getcellvalue', row, 'state');
							townsSource.data = {state: stateValue};
							daTowns = new $.jqx.dataAdapter(townsSource);
							editor.jqxDropDownList({ source: daTowns });
						},
						createeditor: function (row, column, editor) {
							editor.jqxDropDownList({ autoDropDownHeight: true, displayMember: 'name', valueMember: 'id', placeHolder: "Escoja:" });
						},
						cellvaluechanging: function (row, column, columntype, oldvalue, newvalue) {
                        	if (newvalue == "") return oldvalue;
                        }
					},
					{ text: 'Localidad', width: '35%', columntype: 'textbox', datafield: 'location' },
					{ text: 'Altitud min. (m)', width: '15%', columntype: 'textbox', datafield: 'altitude_min', cellsformat: 'n' },
					{ text: 'Altitud max. (m)', width: '15%', columntype: 'textbox', datafield: 'altitude_max', cellsformat: 'n' },
					{ text: 'Latitud', width: '15%', columntype: 'textbox', datafield: 'latitude' },
					{ text: 'Longitud', width: '15%', columntype: 'textbox', datafield: 'longitud' },
					{ text: 'Colección', width: '20%', columntype: 'textbox', datafield: 'collection' },
					{ text: 'Fecha colección', width: '15%', columntype: 'datetimeinput', cellsformat: 'dd/MM/yyyy', datafield: 'collection_date' },
					{ text: 'Herbario', width: '15%', columntype: 'textbox', datafield: 'herbarium' },
					{ text: 'Referencia', width: '15%', columntype: 'custom', datafield: 'reference' }
				]
			});
			
			var listaRoja = {{ lista_roja }};
			var sourceListaRoja = {
				datatype: 'json',
				datafields: [
					{ name: 'id', type: 'number' },
					{ name: 'category', type: 'string' },
					{ name: 'criterion', type: 'string' },
					{ name: 'country', type: 'string' },
				],
				localdata: listaRoja,
				
				addrow: function (rowid, rowdata, position, commit) {
					commit(true);
				},
				
				deleterow: function (rowid, commit) {
					commit(true);
				}
			};
			
			var daListaRoja = new $.jqx.dataAdapter(sourceListaRoja);
			
			$('#grid_lista_roja').jqxGrid({
				width: 915,
				theme: theme,
				autoheight: true,
				source: daListaRoja,
				editable: true,
				columnsresize: true,
				showstatusbar: true,
				localization: getLocalization(),
			    pageable: true,
				renderstatusbar: function (statusbar) {
					var container = $("<div style='overflow: hidden; position: relative; margin: 3px;'></div>");
                    var addButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_new.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Nuevo</span></div>");
                    var deleteButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_delete.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Eliminar</span></div>");
                    container.append(addButton);
                    container.append(deleteButton);
                    statusbar.append(container);
                    addButton.jqxButton({ theme: theme, width: 70, height: 20 });
                    deleteButton.jqxButton({ theme: theme, width: 80, height: 20 });
                    
                    addButton.bind('click', function () {
                    	var commit = $('#grid_lista_roja').jqxGrid('addrow', null, {});
                    });
                    
                    deleteButton.bind('click', function () {
                    	var rowindex = $('#grid_lista_roja').jqxGrid('getselectedrowindex');
                    	if (rowindex >= 0) {
                    		var id = $("#grid_lista_roja").jqxGrid('getrowid', rowindex);
        					$("#grid_lista_roja").jqxGrid('deleterow', id);
                    	}
                    });
                },
                columns: [
					{ text: 'Categoria', width: '25%', columntype: 'textbox', datafield: 'category' },
					{ text: 'Criterio IUCN', width: '25%', columntype: 'textbox', datafield: 'criterion' },
					{ text: 'País', width: '25%', columntype: 'textbox', datafield: 'country' },
					{ text: 'Referencia', width: '25%', columntype: 'textbox' }
				]
			});
			
			var indicadoresCC = {{ indicadoresCC }};
			var sourceIndicadoresCC = {
				datatype: 'json',
				datafields: [
					{ name: 'id', type: 'number' },
					{ name: 'criterion', type: 'string' },
					{ name: 'author', type: 'string' }
				],
				localdata: indicadoresCC,
				
				addrow: function (rowid, rowdata, position, commit) {
					commit(true);
				},
				
				deleterow: function (rowid, commit) {
					commit(true);
				}
			};
			
			var daIndicadoresCC = new $.jqx.dataAdapter(sourceIndicadoresCC);
			
			$('#grid_indicadores_cc').jqxGrid({
				width: 915,
				theme: theme,
				source: daIndicadoresCC,
				autoheight: true,
				editable: true,
				columnsresize: true,
				showstatusbar: true,
				localization: getLocalization(),
			    pageable: true,
				renderstatusbar: function (statusbar) {
					var container = $("<div style='overflow: hidden; position: relative; margin: 3px;'></div>");
                    var addButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_new.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Nuevo</span></div>");
                    var deleteButton = $("<div style='float: left; margin-left: 5px;'><img style='position: relative; margin-top: 1px;' src='{{ base_url('public/images/img16x16_delete.png') }}'/><span style='margin-left: 4px; position: relative; top: 2px;'>Eliminar</span></div>");
                    container.append(addButton);
                    container.append(deleteButton);
                    statusbar.append(container);
                    addButton.jqxButton({ theme: theme, width: 70, height: 20 });
                    deleteButton.jqxButton({ theme: theme, width: 80, height: 20 });
                    
                    addButton.bind('click', function () {
                    	var commit = $('#grid_indicadores_cc').jqxGrid('addrow', null, {});
                    });
                    
                    deleteButton.bind('click', function () {
                    	var rowindex = $('#grid_indicadores_cc').jqxGrid('getselectedrowindex');
                    	if (rowindex >= 0) {
                    		var id = $("#grid_indicadores_cc").jqxGrid('getrowid', rowindex);
        					$("#grid_indicadores_cc").jqxGrid('deleterow', id);
                    	}
                    });
                },
                columns: [
					{ text: 'Criterio', width: '50%', columntype: 'textbox', datafield: 'criterion' },
					{ text: 'Autor', width: '50%', columntype: 'textbox', datafield: 'author' }
				]
			});
			
			$('#successPersist').jqxWindow({ width: 300, height: 100, isModal: true, autoOpen: false, resizable: false, theme: theme });
			$('#failPersist').jqxWindow({ width: 300, height: 100, isModal: true, autoOpen: false, resizable: false, theme: theme });
			$('#confirm').jqxWindow({ maxHeight: 150, maxWidth: 280, minHeight: 30, minWidth: 250, height: 145, width: 270, 
            	theme: theme, resizable: false, isModal: true, modalOpacity: 0.3, autoOpen: false,
                okButton: $('#ok'), cancelButton: $('#cancel'),
                initContent: function () {
                    $('#ok').jqxButton({ theme: theme, width: '65px' });
                    $('#cancel').jqxButton({ theme: theme, width: '65px' });
                    $('#ok').focus();
                }
           	});
			
			$('#save_details').jqxButton({ width: 70, theme: theme });
			$('#save_distribution').jqxButton({ width: 70, theme: theme });
			$('#save_revision').jqxButton({ width: 70, theme: theme });
			
			if (op == 2) {
				for (var i = 0; i < $('#tax_tabs').jqxTabs('length') - 1; i++) {
					$('#tax_tabs').jqxTabs('disableAt', i + 1);
				}
			}
			
			else {
				$('#name').val('{{ taxon.getName }}');
				$('#author').val('{{ taxon.getAuthorInitials }}');
				
				var item = $("#parent").jqxDropDownList('getItemByValue', {% if taxon %} {{ taxon.getParentHierarchy.getId }} {% else %} -1 {% endif %});
				$('#parent').jqxDropDownList('selectItem', item);
				
				$('#accepted').val({{ taxon.getAcceptedName }});
				$('#endemic').val({{ taxon.getEndemic }});
				$('#comments').val('{{ taxon.getComments }}');
				
				$('#global_distribution').val('{{ taxon.getGlobalDistribution }}');
				$('#vdw_zones').val('{{ taxon.getVDWDistribution }}');
				$('#tropicalAndean_distribution').val('{{ taxon.getTropicalAndeanDistribution }}');
				
				$('#review_editor').val('{{ taxon.getReviewEditor }}');
				$('#review_comments').val('{{ taxon.getReviewComments }}');
				$('#review_date').val('{{ taxon.getReviewDate | date('m/d/Y') }}');
				
				var taxSustratos = {% if tax_sustratos %} {{ tax_sustratos }} {% else %} null {% endif %};
				var itemsSustratosTree = $('#sustratos').jqxTree('getItems');
				
				for (var i = 0; i < taxSustratos.length; i++) {
					for (var j = 0; j < itemsSustratosTree.length; j++) {
						if (itemsSustratosTree[j].id == taxSustratos[i]) {
							$('#sustratos').jqxTree('checkItem', itemsSustratosTree[j], true);
							//$('#sustratos').jqxTree('expandAll');
							break;
						}
					}
				}
				
				var taxEcosistemas = {% if tax_ecosistemas %} {{ tax_ecosistemas }} {% else %} null {% endif %};
				var itemsEcosistemasTree = $('#ecosistemas').jqxTree('getItems');
				
				for (var i = 0; i < taxEcosistemas.length; i++) {
					for (var j = 0; j < itemsEcosistemasTree.length; j++) {
						if (itemsEcosistemasTree[j].id == taxEcosistemas[i]) {
							$('#ecosistemas').jqxTree('checkItem', itemsEcosistemasTree[j], true);
							//$('#ecosistemas').jqxTree('expandAll');
							break;
						}
					}
				}
				
				var taxEcorreg = {% if tax_ecorreg %} {{ tax_ecorreg }} {% else %} null {% endif %};
				for (var i = 0; i < taxEcorreg.length; i++) {
					var item = $('#ecorregiones').jqxListBox('getItemByValue', taxEcorreg[i]);
					$('#ecorregiones').jqxListBox('checkItem', item); 
				}
			}
			
			$('#taxon_form_details').jqxValidator({
				animationDuration: 1,
				rules: [
					{ input: '#name', message: 'El nombre es requerido', action: 'keyup, blur', rule: 'required' },
					{ input: '#author', message: 'El autor es requerido', action: 'keyup, blur', rule: 'required' }
				],
				theme: theme
			});
			
			$('#save_details').click(function () {
				var sustratosItems = $('#sustratos').jqxTree('getCheckedItems');
				var sustratos = null;
				if (sustratosItems.length > 0) {
					sustratos = new Array();
				}
				for (var i = 0; i < sustratosItems.length; i++) {
					sustratos[i] = sustratosItems[i].id;
				}
				
				var ecosistemasItems = $('#ecosistemas').jqxTree('getCheckedItems');
				var ecosistemas = null;
				if (ecosistemasItems.length > 0) {
					ecosistemas = new Array();
				}
				for (var i = 0; i < ecosistemasItems.length; i++) {
					ecosistemas[i] = ecosistemasItems[i].id;
				}
				
				var ecorregionesItems = $('#ecorregiones').jqxListBox('getCheckedItems');
				var ecorregiones = null;
				if (ecorregionesItems.length > 0) {
					ecorregiones = new Array();
				}
				for (var i = 0; i < ecorregionesItems.length; i++) {
					ecorregiones[i] = ecorregionesItems[i].value;
				}
				
				var data = {
					id: taxonId,
					operation: op,
					name: $('#name').val(),
					author: $('#author').val(),
					parent: $('#parent').jqxDropDownList('getSelectedItem').value,
					rank: {{ rank }},
					accepted: $('#accepted').jqxCheckBox('checked') ? 1 : 0,
					endemic: $('#endemic').jqxCheckBox('checked') ? 1 : 0,
					sustrato: sustratos,
					ecosistema: ecosistemas,
					ecorregion: ecorregiones,
					comments: $('#comments').val()
				};
				
				var validation = function(isValid) {
					if (isValid) {
						$.ajax({
							type: 'POST',
							url: '{{ base_url('admin/taxon/persist_lower_details') }}',
							data: data,
							dataType: 'text',
							success: function(response) {
								if (response > 0) {
									$('#successPersist').css('visibility', 'visible');
									var x = ($(window).width() - $('#successPersist').jqxWindow('width')) / 2 + $(window).scrollLeft();
                					var y = ($(window).height() - $('#successPersist').jqxWindow('height')) / 2 + $(window).scrollTop();
                					$('#successPersist').jqxWindow({ position: { x: x, y: y} });
                					$('#successMessage').text('Los detalles de taxón fueron guardados exitosamente');
									$('#successPersist').jqxWindow('open');
									setTimeout(function () {
										$('#successPersist').jqxWindow('close');
									}, 2500);
									if (op == 2) {
										window.location = '{{ base_url('admin/taxon/taxon_form') }}' + '/' + '{{ rank }}' + '/' + response;
									}
								}
								else {
									$('#failPersist').css('visibility', 'visible');
									var x = ($(window).width() - $('#failPersist').jqxWindow('width')) / 2 + $(window).scrollLeft();
                					var y = ($(window).height() - $('#failPersist').jqxWindow('height')) / 2 + $(window).scrollTop();
                					$('#failPersist').jqxWindow({ position: { x: x, y: y} });
                					$('#failMessage').text('Este taxón ya se encuentra registrado');
									$('#failPersist').jqxWindow('open');
									setTimeout(function () {
										$('#failPersist').jqxWindow('close');
									}, 4000);
								}
							},
							error: function(jqXHR, textStatus, errorThrown) {
								alert(errorThrown);
							}
						});
					}
				};
				$('#taxon_form_details').jqxValidator('validate', validation);
			});
			
			$('#save_distribution').click(function () {
				var data = {
					id: taxonId,
					global_distribution: $('#global_distribution').val(),
					vdw_zones: $('#vdw_zones').val(),
					tropicalAndean_distribution: $('#tropicalAndean_distribution').val()
				};
				
				$.ajax({
					type: 'POST',
					url: '{{ base_url('admin/taxon/persist_lower_distribution') }}',
					data: data,
					dataType: 'text',
					success: function(response) {
						if (response > 0) {
							$('#successPersist').css('visibility', 'visible');
							var x = ($(window).width() - $('#successPersist').jqxWindow('width')) / 2 + $(window).scrollLeft();
                			var y = ($(window).height() - $('#successPersist').jqxWindow('height')) / 2 + $(window).scrollTop();
                			$('#successPersist').jqxWindow({ position: { x: x, y: y} });
                			$('#successMessage').text('La distribución mundial fue guardada exitosamente');
							$('#successPersist').jqxWindow('open');
							setTimeout(function () {
								$('#successPersist').jqxWindow('close');
							}, 2500);
						}
						else {
							$('#failPersist').css('visibility', 'visible');
							var x = ($(window).width() - $('#failPersist').jqxWindow('width')) / 2 + $(window).scrollLeft();
                			var y = ($(window).height() - $('#failPersist').jqxWindow('height')) / 2 + $(window).scrollTop();
                			$('#failPersist').jqxWindow({ position: { x: x, y: y} });
                			$('#failMessage').text('Hubo un error al intentar guardar');
							$('#failPersist').jqxWindow('open');
							setTimeout(function () {
								$('#failPersist').jqxWindow('close');
							}, 4000);
						}
					},
					error: function(jqXHR, textStatus, errorThrown) {
						alert(errorThrown);
					}
				});
			});
		});
	</script>
	
{% endblock %}

{% block content %}

	<div class="grid_12">
		<div id="tax_hg_admin_name">
			{% if taxon %}
				{{ taxon.getName }}
			{% else %}
				Nueva {{ rankName }}
			{% endif %}
		</div>
		<div id="tax_hg_admin_type">
			{{ rankName }}
		</div>
		
		<div id="tax_tabs">
			<ul>
				<li>Detalles</li>
				<li>Distribución mundial</li>
				<li>Sinónimos</li>
				<li>Especímenes</li>
				<li>Lista roja</li>
				<li>Imágenes</li>
				<li>Revisión</li>
			</ul>
			
			<div>
				<form class="taxon_form" id="taxon_form_details">
					<fieldset>
					<legend>Datos básicos</legend>
						<div class="div_field">
							<label class="field">Nombre</label>
							<input id="name" name="name" placeholder="Ingrese nombre científico" />
						</div>
						<div class="div_field">
							<label class="field">Autor</label>
							<input id="author" name="author" placeholder="Ingrese iniciales del autor" />
						</div>
						<div class="div_field">
							<label class="field">Taxón padre ({{ parentRank }})</label>
							<div id="parent"></div>
						</div>
						<div class="div_field">
							<label class="field">¿Es aceptada?</label>
							<div class="tax_checkbox" id="accepted"></div>
						</div>
						<div class="div_field">
							<label class="field">¿Es endémica?</label>
							<div class="tax_checkbox" id="endemic"></div>
						</div>
						<div class="div_field">
							<label class="field">Sustratos</label>
							<div id="sustratos"></div>
						</div>
						<div class="div_field">
							<label class="field">Ecorregiones</label>
							<div id="ecorregiones"></div>
						</div>
						<div class="div_field">
							<label class="field">Ecosistemas</label>
							<div id="ecosistemas"></div>
						</div>
						<div class="div_field">
							<label class="field">Comentarios</label>
							<textarea id="comments" name="comments" class="tax_textarea"></textarea>
						</div>
						
						<input type="button" value="Guardar" id="save_details" />
					</fieldset>	
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="taxon_form_distribution">
					<fieldset>
					<legend>Distribución mundial</legend>
						<div class="div_field">
							<label class="field">Distribución en el mundo</label>
							<textarea class="tax_textarea" id="global_distribution" name="global_distribution" placeholder="Ingrese paises separados por comas"></textarea>
						</div>
						<div class="div_field">
							<label class="field">Zonas de Van der Wijk</label>
							<textarea class="tax_textarea" id="vdw_zones" name="vdw_zones" placeholder="Ingrese zonas separadas por comas"></textarea>
						</div>
						<div class="div_field">
							<label class="field">Paises andinotropicales</label>
							<textarea class="tax_textarea" id="tropicalAndean_distribution" name="tropicalAndean_distribution" placeholder="Ingrese paises separados por comas"></textarea>
						</div>
						
						<input type="button" value="Guardar" id="save_distribution" />
					</fieldset>
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="tax_form_synonims">
					<fieldset>
					<legend>Sinonimos</legend>
						<div id="grid_sinonimos"></div>
					</fieldset>
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="tax_form_specimens">
					<fieldset>
					<legend>Especímenes</legend>
						<div id="grid_especimenes"></div>
					</fieldset>
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="tax_form tax_lista_roja">
					<fieldset>
					<legend>Lista roja</legend>
						<div id="grid_lista_roja"></div>
					</fieldset>
			
					<fieldset>
					<legend>Indicadores cambio climático</legend>
						<div id="grid_indicadores_cc"></div>	
					</fieldset>
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="tax_form tax_images">
					<fieldset>
					<legend>Imágenes</legend>
						
					</fieldset>
				</form>
			</div>
			
			<div>
				<form class="taxon_form" id="tax_form_revision">
					<fieldset>
					<legend>Comentarios de revisión</legend>
						<div class="div_field">
							<label class="field">Editor de revisión</label>
							<input id="review_editor" name="review_editor" />
						</div>
						<div class="div_field">
							<label class="field">Comentarios</label>
							<textarea class="tax_textarea" id="review_comments" name="review_comments"></textarea>
						</div>
						<hr/>
						<div class="div_field_date">
							<label>Fecha revisión</label>
							<div id="review_date"></div>
						</div>
						<input type="button" value="Guardar" id="save_revision" />
					</fieldset>
				</form>
			</div>
		</div>
	</div>
	
	<div id="successPersist" caption="Mensaje">
		<div id="successMessage">
		</div>
	</div>
	
	<div id="failPersist" caption="Mensaje">
		<div id="failMessage">
		</div>
	</div>
	
	<div id="confirm" caption="Confirmación">
		<div id="confirm_message">
			¿Está seguro de eliminar el elemento seleccionado?
			<br/><br/>
			<input type="button" id="ok" value="Sí" style="margin-right: 10px" />
            <input type="button" id="cancel" value="No" />
		</div>
	</div>

{% endblock %}	